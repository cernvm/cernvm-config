#!/bin/sh
#############################################################################
# postinstall.sh - a script to configure CernVM image after install
#
# SYNOPSIS
# postinsall.sh <model>
#
# DESCRIPTION
#
# AUTHOR:
# Jakob Blomer, e-mail: jblomer@cern.ch 
#
# CREATION DATE:
# 11-Oct-2015
#C<
###########################################################################
DEFAULT_ACTIONS="disable_services enable_services prelink"
#DEFAULT_ACTIONS="custom_configs disable_services enable_services precron \
# tuned gconf context cvmfs custom_dirs runlevel localcert timezone ssh gui prelink \
# xrdp polkit_fix" 

########################################################################### 
# Helper
###########################################################################

replace_config() {
  local config_file="$1"
  local replacement="$2"

  if ! diff -q "$config_file" "$replacement" > /dev/null; then
    mv "$config_file" "${config_file}.bak"
    cp "$replacement" "$config_file"
  fi
}


###########################################################################
# tasks
###########################################################################


gui() {
  replace_config /etc/xdg/xfce4/helpers.rc /etc/xdg/xfce4/helpers.rc.cernvm
}


disable_services() {
  :
  #systemctl disable avahi-daemon
  #systemctl disable ganglia-gmond
  #systemctl disable glusterd
  #systemctl disable libvirtd
  #systemctl disable ksm
  #systemctl disable ksmtuned
  #systemctl disable rabbitmq_server
  #systemctl disable squid
  #systemctl disable sssd
  #systemctl disable sysstat
  #systemctl disable walinuxagent
  #systemctl disable xrdp
}

enable_services() {
  systemctl enable acpid
  #systemctl enable amiconfig
  #systemctl enable cernvm
  #systemctl enable cernvm-context-postscripts
  #systemctl enable cernvm-online
  #systemctl enable cernvm-cluster-contextualization
  #systemctl enable cernvm-cluster-master-ready
  systemctl enable cernvm-release
  systemctl reenable cloud-final.service
  #systemctl enable mnt-.rw-swapfile.swap
  #systemctl enable ntpd
  #systemctl enable ucernvm-pinfiles
  #systemctl enable vboxguest
  #systemctl enable vboxguest-daemon
  #systemctl enable vboxguest-sf
  #systemctl enable vmware-guestd
}

tuned() {
  /usr/sbin/tuned-adm profile cernvm
}

xrdp() {
  replace_config /etc/xrdp/startwm.sh /etc/xrdp/startwm.sh.cernvm
}

gconf() {
  gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults \
    /apps/procman/show_all_fs --type bool --set true
}

# Add cernvm online context option to login
context() {
  if [ -f /usr/sbin/cernvm-online.sh -a -f /lib64/security/pam_cernvm.so ]
  then
    sed -i -e '/pam_cernvm.so/d' /etc/pam.d/login
    sed -i -e '/auth\s*substack\s*system-auth/i auth [success=done auth_err=die ignore=ignore] pam_cernvm.so' /etc/pam.d/login
    sed -i -e '/account\s*include\s*system-auth/i account requisite pam_cernvm.so' /etc/pam.d/login
  fi
  [ ! -f /bin/sh.after ] && ln -s sh /bin/sh.after || true
  [ ! -f /bin/sh.before ] && ln -s sh /bin/sh.before || true
}

cvmfs() {
  /usr/bin/cvmfs_config setup
  ln -sf /etc/cernvm/default.conf /etc/cvmfs/default.d/75-cvmdefault.conf
  ln -sf /etc/cvmfs/site.conf /etc/cvmfs/default.d/76-site.conf
  ln -sf /etc/cernvm/site.conf /etc/cvmfs/default.d/77-cvmsite.conf
}

custom_dirs() {
  mkdir -p /mnt/cdrom
  mkdir -p /eos
}

runlevel() {
  systemctl reenable lxdm.service
  systemctl set-default multi-user.target
}

cernvm() {
  :
}

# Remove localhost certificate / key (recreated on first boot)
localcert() {
  rm -f /etc/pki/tls/certs/localhost.crt
  rm -f /etc/pki/tls/private/localhost.key
}


# Allow ssh key injection
ssh() {
  if [ ! -d /root/.ssh ] 
  then
    mkdir -p /root/.ssh
    chmod 600 /root/.ssh
  fi
}


###########################################################################
# Fix timeozone
###########################################################################
timezone() {
  ln -sf /usr/share/zoneinfo/posix/GMT /etc/localtime
}


###########################################################################
#  apply xfce4 theme files
###########################################################################
xfce4 () {
    if [ -d /etc/xdg/xfce4 ]; then
        for theme_file in `find /etc/xdg/xfce4 -type f -name '*.cernvm'`; do
            cfile=`dirname $theme_file`/`basename $theme_file .cernvm`
	    if [ -f $cfile ]; then
                if ! diff -q $theme_file $cfile > /dev/null; then
                  cp $cfile $cfile.bak
                  cp $theme_file $cfile
                fi
            else
                cp $theme_file $cfile
            fi
        done
        rm -f \
          /etc/xdg/autostart/xfce4-tips-autostart.desktop \
          /etc/xdg/autostart/nm-applet.desktop
    fi
}

  
custom_configs() {
  replace_config /etc/singularity/singularity.conf /etc/singularity/singularity.conf.cernvm
  replace_config /etc/init.d/network /etc/init.d/network.ucernvm
  replace_config /etc/krb5.conf /etc/krb5.conf.cernvm
  replace_config /etc/lxdm/lxdm.conf /etc/lxdm/lxdm.conf.cernvm
  replace_config /etc/selinux/config /etc/selinux/config.cernvm
  replace_config /etc/ssh/ssh_config /etc/ssh/ssh_config.cernvm
  replace_config /etc/ssh/sshd_config /etc/ssh/sshd_config.cernvm
  replace_config /etc/sysconfig/autofs /etc/sysconfig/autofs.cernvm
  replace_config /etc/sysconfig/man-db /etc/sysconfig/man-db.cernvm
  replace_config /etc/updatedb.conf /etc/updatedb.conf.cernvm
  replace_config /etc/sudoers /etc/sudoers.cernvm
  replace_config /etc/containerd/config.toml /etc/containerd/config.toml.cernvm
  chmod 0440 /etc/sudoers
}

precron() {
  for job in \
      cron.d/sysstat \
      cron.daily/0logwatch \
      cron.daily/0yum-daily.cron \
      cron.daily/mlocate \
      cron.daily/prelink \
      cron.hourly/0yum-hourly.cron \
      cron.hourly/ghc-doc-index; do
    [ -f /etc/$job ] && chmod -x /etc/$job
  done
  
  echo "  --> ghc-doc-index"
  /bin/sh /etc/cron.hourly/ghc-doc-index
  echo "  --> mlocate"
  /bin/sh /etc/cron.daily/mlocate
  echo "  --> prelink"
  /bin/sh /etc/cron.daily/prelink
}

# Update static linker cache
prelink() {
  /sbin/ldconfig -X
}



###########################################################################
platform=$1; arch=$2
###########################################################################

for action in $DEFAULT_ACTIONS $EXTRA_ACTIONS
do
  echo "**** Executing $action for $platform ($arch)"
  ( $action ) || echo "**** Error: $action for $model ($arch) failed."
done
